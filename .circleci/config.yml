version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: shipyardsuite/nodejs-service-template
    docker:
      - image: circleci/node:10

jobs:
  test:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      
      # Install dependencies
      - run:
          name: "install dependencies"
          command: "npm install"

      # Run tests
      - run:
          name: "run tests"
          command: "npm test"

  coverage: 
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker

      # Install dependencies
      - run:
          name: "install dependencies"
          command: "npm install"

      # Run tests
      - run:
          name: "run tests"
          command: "npm test"

      # upload test coverage...
      - run:
          name: "upload test coverage to codecov"
          command: "bash <(curl -s https://codecov.io/bash)"
      - run: 
          name: "upload test coverage to codacy"
          command: "bash <(curl -Ls https://coverage.codacy.com/get.sh)"

  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      
      # Install dependencies
      - run:
          name: "install dependencies"
          command: "npm install"
      
      # Build Docker image
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:develop .
      
      # Archive Docker image
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker

      # Load archived Docker image
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      
      # Publish Image to DockerHub
      - run:
          name: Publish Image to DockerHub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:develop

  deploy:
    executor: docker-publisher
    steps:

      # deploy image to digitalocean...
      - run: 
          command: |
            ssh -oStrictHostKeyChecking=no -v circleci@$ip \
            echo testtesttest


workflows:
  version: 2
  workflow:
    jobs:
      - test
      - coverage:
          requires:
            - test
      - build:
          requires:
            - test
      - publish:
          context: dockerhub
          requires:
            - build
      - deploy:
          context: digitalocean-develop
          requires:
            - publish
